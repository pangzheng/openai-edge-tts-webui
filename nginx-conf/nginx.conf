
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

# 定义服务器块
    server {
        listen       80;              # Nginx 监听的端口（Docker 容器内）
        server_name  localhost;       # 服务器名称

        # 静态文件服务
        location / {
            root   /usr/share/nginx/html;  # 静态文件目录（与 Docker 挂载对应）
            index  index.html index.htm;   # 默认文件
            try_files $uri $uri/ /index.html;  # 支持单页应用路由
        }

        # API 反向代理和跨域配置
        location /v1/audio/speech {
            # 代理到本地 5050 端口
            proxy_pass http://host.docker.internal:5050/v1/audio/speech;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 配置
            add_header 'Access-Control-Allow-Origin' '*' always;  # 允许所有来源
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;  # 允许的方法
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;  # 允许的头部

            # 处理 OPTIONS 预检请求
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Content-Length' 0;
                return 204;  # 无内容返回，符合预检要求
            }
        }

        # 可选：错误页面配置
        error_page  404 /404.html;
        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    

    include /etc/nginx/conf.d/*.conf;
}
